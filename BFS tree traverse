from collections import deque


class TreeNode:
  def __init__(self, val):
    self.val = val
    self.left, self.right = None, None


def traverse(root):
  result = []
  if root is None:
      return result
  # TODO: Write your code here

  children = deque()
  children.append(root)
  while children:
      levelSize = len(children)
      currentLevel = []
      for _ in range(levelSize):
        parent = children.popleft()
        currentLevel.append(parent.val)
        if parent.left:
          children.append(parent.left)
        if parent.right:
          children.append(parent.right)
      
      result.append(currentLevel)
  return result


def main():
  root = TreeNode(12)
  root.left = TreeNode(7)
  root.right = TreeNode(1)
  root.left.left = TreeNode(9)
  root.right.left = TreeNode(10)
  root.right.right = TreeNode(5)
  print("Level order traversal: " + str(traverse(root)))


main()
