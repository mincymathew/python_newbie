def can_partition_recurse(dp, sum, num, index):
    if index >= (len(num)):
            return 0
    if dp[index][sum] != -1:
        return dp[sum][index]
    if sum - num[index] > 0:
        if (can_partition_recurse(dp, sum - num[index], num, index+1)):
            dp[index][sum] = 1
            return True
    elif sum - num[index] == 0:
        dp[index][sum] = 1
        return 1

    dp[index][sum] =  can_partition_recurse(dp, sum, num, index+1)
    
    return dp[index][sum]

def can_partition(num):
  # TODO: Write your code here
 
  sum = 0
  for i in range(len(num)):
    sum += num[i]
  dp = [[-1 for x in range((sum/2)+1)] for y in range(len(num))]  
  if sum % 2 != 0:
      return False
      
  return True if(can_partition_recurse(dp, sum/2, num, 0) ==1 ) else  False
    


def main():
  print("Can partition: " + str(can_partition([1, 2, 3, 4])))
  print("Can partition: " + str(can_partition([1, 1, 3, 4, 7])))
  print("Can partition: " + str(can_partition([2, 3, 4, 6])))


main()
